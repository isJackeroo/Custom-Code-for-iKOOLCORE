{{ 'video-section.css' | asset_url | stylesheet_tag }}
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  /* Heading Styles */
  .section-{{ section.id }}-heading {
    text-align: {{ section.settings.heading_align }};
    {% if section.settings.heading_bold %}
      font-weight: bold;
    {% else %}
      font-weight: normal;
    {% endif %}
  }

  /* Section Width and Centering */
  .video-section.section-{{ section.id }}-width {
    width: 100%; /* Ensures the section takes available width before max-width */
    margin-left: auto;
    margin-right: auto;
    {% case section.settings.section_width %}
      {% when 'theme_width' %}
        max-width: {{ settings.page_width }}px;
        /* Inherit theme padding if available, or set a default */
        padding-left: var(--page-width-padding, 20px);
        padding-right: var(--page-width-padding, 20px);
      {% when 'width_75' %}
        max-width: 75%;
        padding-left: 20px; /* Add some padding for smaller screens if needed */
        padding-right: 20px;
      {% when 'width_80' %}
        max-width: 80%;
        padding-left: 20px;
        padding-right: 20px;
      {% when 'width_90' %} /* Added 90% option as a good middle ground */
        max-width: 90%;
        padding-left: 20px;
        padding-right: 20px;
      {% when 'width_100' %}
        max-width: 100%;
        padding-left: 0;
        padding-right: 0;
    {% endcase %}
  }

  /* Desktop Video Grid Layout */
  @media screen and (min-width: 750px) {
    .video-grid {
      display: grid;
      grid-template-columns: repeat({{ section.settings.videos_per_row }}, 1fr);
      gap: 30px; /* Spacing between videos */
    }
  }

  /* Mobile Video Layout */
  @media screen and (max-width: 749px) {
    .video-grid {
      display: flex; /* Use flexbox for better mobile item handling */
      flex-direction: column;
      gap: 20px; /* Spacing between videos on mobile */
    }
    .video-grid .video-grid__item {
      width: 100%;
    }
    /* Control mobile visibility based on settings */
    .video-grid__item.hide-on-mobile {
        display: none;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="video-section isolate section-{{ section.id }}-padding section-{{ section.id }}-width">
    {%- unless section.settings.heading == blank -%}
      <div class="title-wrapper title-wrapper--no-top-margin{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %} section-{{ section.id }}-heading">
        <{{ section.settings.heading_tag }} class="title inline-richtext {{ section.settings.heading_size }}">{{ section.settings.heading }}</{{ section.settings.heading_tag }}>
      </div>
    {%- endunless -%}

    <div class="video-grid">
      {% for block in section.blocks %}
        {%- liquid
          assign video_id = block.settings.video.id | default: block.settings.video_url.id
          assign video_alt = block.settings.video.alt | default: block.settings.description
          assign alt = 'sections.video.load_video' | t: description: video_alt | escape
          assign poster = block.settings.video.preview_image | default: block.settings.cover_image

          if block.settings.video != null
            assign ratio_diff = block.settings.video.aspect_ratio | minus: poster.aspect_ratio | abs
            if ratio_diff < 0.01 and ratio_diff > 0
              assign fix_ratio = true
            endif
          else
            assign fix_ratio = false
          endif
        -%}

        {%- capture sizes -%}
          {% comment %}
            Adjust sizes based on the selected section width.
            The `calc` logic is updated to factor in the section's `max-width` percentage.
          {% endcomment %}
          {% liquid
            assign gap_total_width = section.settings.videos_per_row | minus: 1 | times: 30
            assign single_video_base_width_percent = 100 | divided_by: section.settings.videos_per_row
          %}
          {% case section.settings.section_width %}
            {% when 'theme_width' %}
              (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width | minus: 40 }}px - {{ gap_total_width }}px) / {{ section.settings.videos_per_row }}), /* Assuming 20px padding on each side for theme width */
              (min-width: 750px) calc((100vw - 10rem - {{ gap_total_width }}px) / {{ section.settings.videos_per_row }}),
              100vw
            {% when 'width_75' %}
              (min-width: 750px) calc((75vw - 40px - {{ gap_total_width }}px) / {{ section.settings.videos_per_row }}), /* 40px for left/right padding */
              100vw
            {% when 'width_80' %}
              (min-width: 750px) calc((80vw - 40px - {{ gap_total_width }}px) / {{ section.settings.videos_per_row }}),
              100vw
            {% when 'width_90' %}
              (min-width: 750px) calc((90vw - 40px - {{ gap_total_width }}px) / {{ section.settings.videos_per_row }}),
              100vw
            {% when 'width_100' %}
              (min-width: 750px) calc((100vw - {{ gap_total_width }}px) / {{ section.settings.videos_per_row }}),
              100vw
          {% endcase %}
        {%- endcapture -%}

        <div class="video-grid__item {% if block.settings.hide_on_mobile %}hide-on-mobile{% endif %}">
          <deferred-media
            class="video-section__media deferred-media gradient global-media-settings{% if fix_ratio %} media-fit-cover{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
            data-media-id="{{ video_id }}"
            {% if poster != null %}
              style="--ratio-percent: {{ 1 | divided_by: poster.aspect_ratio | times: 100 }}%;"
            {% endif %}
          >
            <button
              id="Deferred-Poster-Modal-{{ video_id }}"
              class="video-section__poster media deferred-media__poster media--landscape"
              type="button"
              aria-label="{{ alt }}"
            >
              {%- if poster != null -%}
                {{
                  poster
                  | image_url: width: 3840
                  | image_tag: sizes: sizes, widths: '375, 750, 1100, 1500, 1780, 2000, 3000, 3840', alt: alt
                }}
              {%- else -%}
                {{ 'hero-apparel-3' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
              {%- endif -%}
              <span class="deferred-media__poster-button motion-reduce">
                <span class="svg-wrapper">
                  {{- 'icon-play.svg' | inline_asset_content -}}
                </span>
              </span>
            </button>
            <template>
              {%- if block.settings.video == null and block.settings.video_url != null -%}
                {%- liquid
                  assign loop = ''
                  if block.settings.enable_video_looping
                    assign loop = '&loop=1&playlist=' | append: video_id
                  endif
                -%}
                {%- if block.settings.video_url.type == 'youtube' -%}
                  <iframe
                    src="https://www.youtube.com/embed/{{ video_id }}?enablejsapi=1&autoplay=1{{ loop }}"
                    class="js-youtube"
                    allow="autoplay; encrypted-media"
                    allowfullscreen
                    title="{{ block.settings.description | escape }}"
                  ></iframe>
                {%- else -%}
                  <iframe
                    src="https://player.vimeo.com/video/{{ video_id }}?autoplay=1{{ loop }}"
                    class="js-vimeo"
                    allow="autoplay; encrypted-media"
                    allowfullscreen
                    title="{{ block.settings.description | escape }}"
                  ></iframe>
                {%- endif -%}
              {%- else -%}
                {{
                  block.settings.video
                  | video_tag:
                    image_size: '1100x',
                    autoplay: true,
                    loop: block.settings.enable_video_looping,
                    controls: true,
                    muted: false
                }}
              {%- endif -%}
            </template>
          </deferred-media>
          {%- unless block.settings.description == blank -%}
            <p class="video-description">{{ block.settings.description }}</p>
          {%- endunless -%}
        </div>
      {% endfor %}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.video.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "t:sections.video.settings.heading.default",
      "label": "t:sections.video.settings.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        { "value": "h2", "label": "t:sections.all.heading_size.options__1.label" },
        { "value": "h1", "label": "t:sections.all.heading_size.options__2.label" },
        { "value": "h0", "label": "t:sections.all.heading_size.options__3.label" },
        { "value": "hxl", "label": "t:sections.all.heading_size.options__4.label" },
        { "value": "hxxl", "label": "t:sections.all.heading_size.options__5.label" }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "select",
      "id": "heading_tag",
      "options": [
        { "value": "h1", "label": "H1" },
        { "value": "h2", "label": "H2" },
        { "value": "h3", "label": "H3" }
      ],
      "default": "h2",
      "label": "Heading HTML Tag"
    },
    {
      "type": "select",
      "id": "heading_align",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ],
      "default": "left",
      "label": "Heading Alignment"
    },
    {
      "type": "checkbox",
      "id": "heading_bold",
      "label": "Bold Heading",
      "default": false
    },
    {
      "type": "range",
      "id": "videos_per_row",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 3,
      "label": "Videos per row on desktop"
    },
    {
      "type": "header",
      "content": "Section Width Settings"
    },
    {
      "type": "select",
      "id": "section_width",
      "label": "Section Width",
      "options": [
        { "value": "theme_width", "label": "Inherit Theme Width" },
        { "value": "width_75", "label": "75% of Display Width" },
        { "value": "width_80", "label": "80% of Display Width" },
        { "value": "width_90", "label": "90% of Display Width" },
        { "value": "width_100", "label": "100% of Display Width (Full-Width)" }
      ],
      "default": "theme_width"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "video_item",
      "name": "Video",
      "settings": [
        {
          "type": "checkbox",
          "id": "enable_video_looping",
          "label": "t:sections.video.settings.enable_video_looping.label",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide this video on mobile",
          "default": false
        },
        {
          "type": "header",
          "content": "t:sections.video.settings.header__1.content"
        },
        {
          "type": "video",
          "id": "video",
          "label": "t:sections.video.settings.video.label"
        },
        {
          "type": "header",
          "content": "t:sections.video.settings.header__2.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.video.settings.paragraph.content"
        },
        {
          "type": "video_url",
          "id": "video_url",
          "accept": ["youtube", "vimeo"],
          "default": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
          "label": "t:sections.video.settings.video_url.label",
          "info": "t:sections.video.settings.video_url.info"
        },
        {
          "type": "image_picker",
          "id": "cover_image",
          "label": "t:sections.video.settings.cover_image.label"
        },
        {
          "type": "text",
          "id": "description",
          "label": "Video Description",
          "info": "Add a short description for the video"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Video Gallery",
      "blocks": [
        {
          "type": "video_item"
        },
        {
          "type": "video_item"
        },
        {
          "type": "video_item"
        }
      ]
    }
  ]
}
{% endschema %}
